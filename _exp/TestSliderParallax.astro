---
const img_src = [
  "https://images.pexels.com/photos/15569152/pexels-photo-15569152.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/13428290/pexels-photo-13428290.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/12931549/pexels-photo-12931549.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/14710853/pexels-photo-14710853.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/9921261/pexels-photo-9921261.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/15569150/pexels-photo-15569150.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/14690058/pexels-photo-14690058.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/13640177/pexels-photo-13640177.jpeg?auto=compress&cs=tinysrgb&w=1600&lazy=load",
  "https://images.pexels.com/photos/14619842/pexels-photo-14619842.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
  "https://images.pexels.com/photos/14566984/pexels-photo-14566984.jpeg?auto=compress&cs=tinysrgb&w=1600&lazy=load",
];
---

<section>
  <div id="image-track" data-mouse-down-at="0" data-prev-percentage="0">
    {img_src.map((item) => <img src={item} class="image" draggable="false" />)}
  </div>
</section>

<script is:inline>
  const track = document.getElementById("image-track");

  window.onmousedown = (e) => {
    track.dataset.mouseDownAt = e.clientX;
  };
  window.onmouseup = () => {
    track.dataset.mouseDownAt = "0";
    track.dataset.prevPercentage = track.dataset.percentage;
  };
  window.onmousemove = (e) => {
    if (track.dataset.mouseDownAt === "0") return;

    const mouseDelta = parseFloat(track.dataset.mouseDownAt) - e.clientX,
      maxDelta = window.innerWidth / 2;

    const percentage = (mouseDelta / maxDelta) * -100,
      nextPercentageUnconstrained =
        parseFloat(track.dataset.prevPercentage) + percentage,
      nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);

    track.dataset.percentage = nextPercentage;

    track.animate(
      {
        transform: `translate(${nextPercentage}%, -50%)`,
      },
      { duration: 1800, fill: "forwards" }
    );

    track.style.transform = `translate(${nextPercentage}%, -50%)`;

    for (const image of track.getElementsByClassName("image")) {
      image.animate(
        {
          objectPosition: `${100 + nextPercentage}% center`,
        },
        { duration: 1800, fill: "forwards" }
      );
    }
  };
</script>

<style>
  #image-track > .image {
    width: 15vmin;
    height: 40vmin;
    object-fit: cover;
    object-position: 100% 50%;
  }
  #image-track {
    display: flex;
    gap: 2vmin;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(0%, -50%);
    user-select: none;
  }
</style>

<style>
  section {
    background: #333;
    position: relative;
    height: 100%;
    overflow: hidden;
    min-height: 50vmin;
  }
</style>
